<beans:beans xmlns="http://www.springframework.org/schema/security" 
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.2.xsd">
           
<!--     <http pattern="/resource/**" security="none" /> -->
<!--     <http pattern="/index.do" security="none" /> -->
<!--     <http pattern="/com/login/login.do" security="none" /> -->
<!--     <http pattern="/signup.do" security="none" /> -->
<!--     <http pattern="/signup/register.do" security="none" /> -->
<!--     <http pattern="/signup/complete.do" security="none" /> -->
<!--     <http pattern="/signup/confirm.do" security="none" /> -->
<!--     <http pattern="/signup/confirmed.do" security="none" /> -->
<!--     <http pattern="/signup/unconfirmed.do" security="none" /> -->
<!--     <http pattern="/appinf/**" security="none" /> -->
<!--     <http pattern="/hp/**" security="none" /> -->
<!--     <http pattern="/index.jsp" security="none" /> -->
    
    <http auto-config="false" entry-point-ref="loginUrlAuthenticationEntryPoint" access-denied-page="/error/denied.do">
<!--         <intercept-url pattern="/**" access="ROLE_USER" /> -->
        
        <custom-filter position="FORM_LOGIN_FILTER" ref="usernamePasswordAuthenticationFilter"/>
        <custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="filterSecurityInterceptor"/>
        
        <logout logout-success-url="/com/login/logout.do" />
        <session-management invalid-session-url="/index.do">
        <!-- 
        <session-management invalid-session-url="/com/login/login.do">
         -->
        	<concurrency-control max-sessions="1" error-if-maximum-exceeded="true" /> <!-- reject second login --> 
        </session-management>
        <!--<form-login login-page="/login" default-target-url="/archive/documentinfo" authentication-failure-url="/login?error=1" always-use-default-target="true" />-->
    </http>

    <!--beans:bean id="usernamePasswordAuthenticationFilter" class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter"-->
    <beans:bean id="usernamePasswordAuthenticationFilter" class="egovframework.com.login.security.CustomUsernamePasswordAuthenticationFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" />
        <beans:property name="authenticationFailureHandler" ref="authenticationFailureHandler" />
        <beans:property name="postOnly" value="false" />
    </beans:bean>	
    
    <authentication-manager alias="authenticationManager">
        <authentication-provider ref="authenticationProvider" />
    </authentication-manager>

    <beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
    <!--beans:bean id="authenticationProvider" class="egovframework.com.login.security.CustomAuthenticationProvider"-->
        <beans:property name="passwordEncoder" ref="encoder"/>
        <beans:property name="userDetailsService" ref="CmmLoginUserService"/>
    </beans:bean>

    <beans:bean id="CmmLoginUserService" class="egovframework.com.login.service.CmmLoginService"></beans:bean>
    <beans:bean id="encoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
    	<beans:constructor-arg index="0" value="256"/>
	</beans:bean>

    <beans:bean id="loginUrlAuthenticationEntryPoint" class="egovframework.com.login.security.CustomLoginUrlAuthenticationEntryPoint">
    <!--beans:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint"-->
        <beans:property name="loginFormUrl" value="/com/login/login.do"/>
    </beans:bean>

    <!--beans:bean id="authenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler"-->
    <beans:bean id="authenticationSuccessHandler" class="egovframework.com.login.security.CustomLoginSuccessHandler">
        <beans:property name="defaultTargetUrl" value="/com/login/login_success.do"/>
        <beans:property name="alwaysUseDefaultTargetUrl" value="true" />
    </beans:bean>

    <beans:bean id="authenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
        <beans:property name="defaultFailureUrl" value="/com/login/login.do?error=1"/>
    </beans:bean>
    
    <beans:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
    	<beans:property name="authenticationManager" ref="org.springframework.security.authenticationManager"/>
    	<beans:property name="accessDecisionManager" ref="accessDecisionManager"/>
    	<beans:property name="securityMetadataSource" ref="reloadableFilterInvocationSecurityMetadataSource"/>
    </beans:bean>
    
    <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
    	<beans:constructor-arg>
    		<beans:list>
    			<beans:bean class="org.springframework.security.access.vote.RoleVoter">
    				<beans:property name="rolePrefix" value=""/>
    			</beans:bean>
    		</beans:list>
    	</beans:constructor-arg>
    	<beans:property name="allowIfAllAbstainDecisions" value="false"/>
    </beans:bean>
    
    <beans:bean id="reloadableFilterInvocationSecurityMetadataSource" class="egovframework.com.login.security.ReloadableFilterInvocationSecurityMetadataSource">
    	<beans:constructor-arg ref="requestMap"/>
    	<beans:property name="securedObjectService" ref="securedObjectService"/>
    </beans:bean>
    
    <beans:bean id="securedObjectService" class="egovframework.com.login.service.SecuredObjectServiceImpl">
    	<beans:property name="securedObjectDao" ref="securedObjectDao"/>
    </beans:bean>
    
    <beans:bean id="securedObjectDao" class="egovframework.com.login.security.SecuredObjectDAO">
    	<beans:property name="dataSource" ref="dataSource"/>
    	<beans:property name="sqlRolesAndUrl" value="
    		SELECT A.RES_PATTERN AS URL, B.ROLE_ID AS AUTHORITY
    		FROM SYS_SECURED_RES A, SYS_SECURED_RES_ROLE B
    		WHERE A.RES_ID = B.RES_ID
    		AND A.RES_TYPE = 'url'
    		ORDER BY A.SORT_ORDER
    	"/>
    </beans:bean>
    
    <beans:bean id="requestMap" class="egovframework.com.login.security.intercept.UrlResourcesMapFactoryBean" init-method="init">
    	<beans:property name="securedObjectService" ref="securedObjectService"/>
    </beans:bean>
    
</beans:beans>